#!/bin/bash
PATH="node_modules/.bin:$PATH"

# If we've only made a change to the package.json's version, it's a release and we should bypass the pre-commit check.
isPackageJsonChange=$(git diff --cached --stat | grep "package.json | 2 +-")
if [[ -n "${isPackageJsonChange[@]}" ]]
then
  isVersionChange=$(git diff --cached | grep "+  \"version\"")
  if [[ -n "${isVersionChange[@]}" ]]
  then
    echo -e "---------------------\nPreparing for release\n---------------------"
    echo "üëæ  Installing node modules."
    npm install
    echo "üìë  Compiling distribution files for release."
    npm run -s dist && git add dist/* && exit 0
    exit 1
  fi
fi


echo -e "---------------------------\nRunning git pre-commit hook\n---------------------------"

# Protect master from accidental commits.
echo "üîç  Checking branch isn't master."
branchName=$(git branch | grep '*' | sed 's/* //')
if [ $branchName == 'master' ]
then
  echo "üíî  Cannot commit to master, please create a branch." && exit 1
fi


# Run linting and commit check.
STAGED_SRC_FILES=`git diff --staged --name-only HEAD ./src | grep .*\\.js | grep -v json` # JS & JSX Files included
STAGED_TEST_FILES=`git diff --staged --name-only HEAD ./test | grep .*\\.js | grep -v json` # JS & JSX Files included
STAGED_SASS_FILES=`git diff --staged --name-only HEAD ./src/styles | grep .*\\.scss`
SRC_EXIT_CODE=1
TEST_EXIT_CODE=1
SASS_EXIT_CODE=1
JSCS_EXIT_CODE=1
COMMIT_MSG_EXIT_CODE=1

echo "üîç  Running linting on staged files‚Ä¶"
echo "    - ESLint Source"
if [ "$STAGED_SRC_FILES" ]; then
  eslint --rulesdir ./src $STAGED_SRC_FILES && SRC_EXIT_CODE=0
else
  SRC_EXIT_CODE=0
fi

echo "    - ESLint Tests"
if [ "$STAGED_TEST_FILES" ]; then
  echo "linting test"
  eslint --rulesdir ./test $STAGED_TEST_FILES && TEST_EXIT_CODE=0
else
  TEST_EXIT_CODE=0
fi

echo "    - SASSLint";
if [ "$STAGED_SASS_FILES" ]; then
  sass-lint $STAGED_SASS_FILES -v && SASS_EXIT_CODE=0
else
  SASS_EXIT_CODE=0
fi

echo "    - JSCSLint"
if [ "$STAGED_SRC_FILES" ]; then
  jscs $STAGED_SRC_FILES $STAGED_TEST_FILES && JSCS_EXIT_CODE=0
else
  JSCS_EXIT_CODE=0
fi

if [ $SRC_EXIT_CODE -eq 1 ] || [ $TEST_EXIT_CODE -eq 1 ] || [ $SASS_EXIT_CODE -eq 1 ] || [ $JSCS_EXIT_CODE -eq 1 ]; then
  echo "üíî  Linting failed."
  exit 1
fi

echo "üîç  Checking commit message."
node scripts/commit-msg && COMMIT_MSG_EXIT_CODE=0
if [ $COMMIT_MSG_EXIT_CODE -eq 1 ]; then exit 1; fi
