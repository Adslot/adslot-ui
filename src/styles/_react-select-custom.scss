@import 'variable';

// control options
$select-input-border-color: $color-border-lighter;
$select-input-border-radius: $border-radius-base;
$select-input-border-focus: $select-input-border-color;
$select-input-height: 26px;
$select-padding-vertical: 4px;
$select-padding-horizontal: 7px;
$select-text-color: $color-text-form;

// menu options
$select-option-color: $color-text-form;
$select-option-focused-color: $select-option-color;
$select-option-focused-bg: $color-gray-white;
$select-option-disabled-color: $color-disabled;

// clear "x" button
$select-clear-color: $color-text-light;
$select-clear-hover-color: $color-negative;
$select-clear-size: 15px;

// arrow indicator
$select-arrow-color: $color-text-light;
$select-arrow-color-hover: $color-text;

// multi-select item
$select-item-gutter: 2px;
$select-item-color: $color-text-inverse;
$select-item-hover-color: $color-text-light;
$select-item-bg: $color-text-form;
$select-item-hover-bg: $select-item-bg;
$select-item-font-size: $font-size-base;
$select-item-padding-vertical: 2px;
$select-item-padding-horizontal: 5px;


@import '../../node_modules/react-select/scss/default';


.Select {
  $select-input-border-active: $color-border;
  font-weight: $font-weight-light;

  &-menu-outer {
    border-color: $select-input-border-active;
  }

  &-value {
    // Line height inherited from example page's body, we need to set for external use
    line-height: $select-input-height - ($select-item-gutter * 2) - 4px; // # an extra 4px for all the borders
  }

  &:not(.is-disabled) {
    > .Select-control {
      box-shadow: 0 1px $color-border-light;

      &:hover,
      &:focus {
        border-color: $select-input-border-active;
      }
    }

    &.is-open,
    &.is-focused {
      > .Select-control {
        border-color: $select-input-border-active;
      }
    }
  }

  &-arrow-zone,
  &-clear-zone {
    padding-top: $select-padding-vertical;
    vertical-align: top;
  }

  &--multi {
    &.is-disabled {
      > .Select-control {
        padding-bottom: 1px;
      }
    }

    .Select-value {
      border: 0;
      margin-top: 1px;

      &-icon + &-label {
        padding-right: 0;
      }

      &-icon {
        border: 0;
        float: right;
        font-size: $select-clear-size;
        font-weight: $font-weight-light;
        line-height: $select-clear-size;
        margin: $select-item-padding-vertical $select-item-padding-horizontal $select-item-padding-vertical 0;
        padding: 0;
        text-align: center;
        width: $select-item-font-size;
      }
    }
  }
}

.has {
  @mixin has-status($color) {
    .Select {
      &-control,
      &-menu-outer {
        border-color: $color;
      }

      &:not(.is-disabled) {
        > .Select-control {
          &:hover,
          &:focus {
            border-color: $color;
          }
        }
      }

      &.is-open,
      &.is-focused {
        > .Select-control {
          border-color: $color;
        }
      }
    }
  }

  &-error { @include has-status($color-negative); }
  &-warning { @include has-status($color-warning); }
}
